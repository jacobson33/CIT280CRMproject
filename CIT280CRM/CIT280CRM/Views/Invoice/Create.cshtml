@model CIT280CRM.Models.InvoiceModels

@{
    ViewBag.Title = "Create";
}

<h2>Create New Invoice</h2>

<div class="clearfix"></div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-md-7">
        <h4>Invoice Information</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ClientID, "ClientID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.DropDownList("ClientID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PurchaseOrder, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.PurchaseOrder, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PurchaseOrder, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InvoiceDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.InvoiceDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InvoiceDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShipDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.ShipDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShipDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="">
            <table class="table table-striped editorRows">
                @foreach (var lineItem in Model.LineItems)
                {
                    @Html.Partial("EditorRow", lineItem);
                }
            </table>
            @Html.ActionLink("Add another...", "BlankEditorRow", null, new { id = "addItem" })
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-7">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

    </div>
}

<div class="col-md-5">
    <h4>Status &amp; Total</h4>
    <hr />
    <div class="form-group">
        @Html.LabelFor(model => model.InvoiceStatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.DropDownListFor(model => model.InvoiceStatus, new SelectList(new List<string>{"Created","Processing","Shipped","Delivered"}))
            @Html.ValidationMessageFor(model => model.InvoiceStatus, "", new { @class = "text-danger" })
        </div>
    </div>
    <br /><br />
    <div class="form-group">
        @Html.LabelFor(model => model.TotalAmount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="clearfix"></div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    $('#addItem').click(function () {
        $.ajax({
            url: this.href,
            type:'POST',
            cache: false,
            success: function (html) {
                $('#editorRows').append(html);
            }
        });
        return false;
    });

    $('a.deleteRow').live('click', function () {
        $(this).parents('tr.editorRow:first').remove();
        return false;
    });
</script>