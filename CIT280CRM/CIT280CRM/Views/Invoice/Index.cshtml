@using PagedList.Mvc;
@model PagedList.IPagedList<CIT280CRM.Models.InvoiceModels>

@{
    ViewBag.Title = "Invoices";
}

<h2>Invoices</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <label for="search">Search by PO</label>
    @Html.TextBox("searchTerm")
    <button type="submit" value="Search">Submit</button>

}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <label for="search">Search by Company Name</label>
    @Html.TextBox("searchName")
    <button type="submit" value="Search">Submit</button>

}

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table" id="invoice_table">
    <tr>
        <th>@Html.ActionLink("CompanyName", "Index", new { sortId = 1 }) <span class="glyphicon glyphicon-sort-by-alphabet"></span></th>
        <th>@Html.ActionLink("TotalAmount", "Index", new { sortId = 2 }) <span class="glyphicon glyphicon-sort-by-order-alt"></span></th>
        <th>@Html.ActionLink("PurchaseOrder", "Index", new { sortId = 3 }) <span class="glyphicon glyphicon-sort-by-order"></span></th>
        <th>@Html.ActionLink("InvoiceDate", "Index", new { sortId = 4 }) <span class="glyphicon glyphicon-sort-by-attributes"></span></th>
        <th>@Html.ActionLink("ShipDate", "Index", new { sortId = 5 }) <span class="glyphicon glyphicon-sort-by-attributes"></span></th>
        <th>InvoiceStatus</th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ClientModels.CompanyName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TotalAmount)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PurchaseOrder)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.InvoiceDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ShipDate)
        </td>
        <td>
            @formatStatus(@Html.DisplayFor(modelItem => item.InvoiceStatus).ToString())
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.InvoiceID }) |
            @Html.ActionLink("Details", "Details", new { id=item.InvoiceID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.InvoiceID })
        </td>
    </tr>
}

</table>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }),
    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "invoice_table" }))

@helper formatStatus(string s)
{
string labelFormat = "label-default";

switch (s)
{
    case "Shipped":
        labelFormat = "label-primary";
        break;

    case "Processing":
        labelFormat = "label-warning";
        break;

    case "Created":
        labelFormat = "label-info";
        break;

    case "Delivered":
        labelFormat = "label-success";
        break;
}

    <span class="label @labelFormat">@s</span>
}